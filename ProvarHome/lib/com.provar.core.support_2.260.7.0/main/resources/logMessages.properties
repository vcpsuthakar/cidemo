
#Property class for messages, please use giving convention:
#<operation>.<type>.<Feature Abbreviation>.<Function>.<state>.<attribute>
#<operation>.<type>.<Feature Abbreviation>.<Function>.<state='error'>.<errorType?>.<attribute>

#Logging Support Messages
log.def.error.propertyLoad=Could not load property value from Log Message properties file for property: {0}, error code: {1}
log.def.error.propertyFormat=Could not format log message for property {0} for given parameters: {1}.
log.def.error.formatException=Format of the property key {0} is not correct.

# Logging Support Messages error codes
log.def.error.propertyMissing.code=ELGPRO0001
test.def.sf.conn.error.userAuthentication.code=ESFCON0001

# Logging Support Test Messages Sf
test.def.sf.conn.error.userAuthentication=User {0} can not be authenticated.

# Logging Support Messages for Sf Connection
test.def.sf.conn.inProgress.openSfConn=Connecting to Salesforce as {0}
test.def.sf.conn.success.openSfConn=Successfully connected to Salesforce as {0}
test.def.sf.conn.warning.openSfConn=Warning - connected to Salesforce as {0}
test.def.sf.conn.error.openSfConn=Error when attempting to connect to Salesforce as {0}

test.def.sf.conn.inProgress.closeManagedResource=Handling {0}.  Name: {1}
test.def.sf.conn.success.closeManagedResource={0} handled successfully.  Name: {1}
test.def.sf.conn.warning.closeManagedResource=Warning - {0} closed.  Name: {1}
test.def.sf.conn.error.closeManagedResource=Error when attempting to close {0}.  Name: {1}

test.def.sf.conn.inProgress.openWebDriver=Opening {0} webdriver instance to {1}
test.def.sf.conn.success.openWebDriver=Successfully opened {0} webdriver to {1}
test.def.sf.conn.warning.openWebDriver=Warning - Opened {0} webdriver to {1}
test.def.sf.conn.error.openWebDriver=Error when attempting to open {0} webdriver to {1}

test.def.sf.conn.inProgress.closingUnnecessaryTabs=Closing unnecessary tabs at launch of chrome
test.def.sf.conn.success.closingUnnecessaryTabs=Closed the unnecessary tabs found.
test.def.sf.conn.inProgress.foundUnnecessaryTab=Found {0} unnecessary tab(s).
test.def.sf.conn.success.foundUnnecessaryTab=Found unnecessary tab with windowhandle {0} and title {1}. Closing it.
test.def.sf.conn.success.noUnnecessaryTab=No unnecessary tabs found.

test.def.sf.conn.inProgress.openHomePage=Opening Salesforce user home page
test.def.sf.conn.success.openHomePage=Successfully opened user home page
test.def.sf.conn.warning.openHomePage=Warning - opened user home page
test.def.sf.conn.error.openHomePage=Error when attempting to open user home page

test.def.sf.conn.inProgress.singleSignOn=Start of Single Sign-On (SSO) login.
test.def.sf.conn.success.singleSignOn=Single Sign-On (SSO) login successful.
test.def.sf.conn.warning.singleSignOn=Warning - Single Sign-On (SSO) login.
test.def.sf.conn.error.singleSignOn=Error when attempting to Single Sign-On (SSO) login.

test.def.sf.conn.inProgress.smaxFsaDesktopLogin=Logging into Smax FSA desktop app
test.def.sf.conn.success.smaxFsaDesktopLogin=Successfully logged into Smax FSA desktop app
test.def.sf.conn.warning.smaxFsaDesktopLogin=Warning - Logged into Smax FSA desktop app
test.def.sf.conn.error.smaxFsaDesktopLogin=Error attempting to log-in into Smax FSA desktop app

test.def.sf.conn.inProgress.updateWindowHandles=Going to update browser window handles.
test.def.sf.conn.inProgress.updatingWindowHandles=Update browser window handles.
test.def.sf.conn.success.updateWindowHandles=Successfully updated browser window handles.

test.def.sf.log.warning.stackTrace={0}
test.def.sf.log.error.stackTrace={0}

test.def.sf.conn.inProgress.sfConnDetails=Connection details. Connection name: {0}, result name: {1}, result scope: {2}, urlString: {3}, environment: {4}, userName: {5}, password: {6} securityToken: {7}
test.def.sf.conn.inProgress.openPartnerConn=Opening Partner connection
test.def.sf.conn.inProgress.openSoapConn=Opening SOAP connection
test.def.sf.conn.inProgress.openMetadataConn=Opening Metadata connection
test.def.sf.conn.inProgress.apiConnectionConfig=Connection configurations: userName: {0},  password: {1}, securityToken: {2}, authEndpoint: {3}, serviceEndpoint: {4}
test.def.sf.conn.inProgress.createObjectLogFile=Create object id log file.
test.def.sf.conn.inProgress.absoluteLogFilePath=Absolute path: {0}
test.def.sf.conn.inProgress.alreadyOpenBehaviourReuse=A connection is already open and will be reused. Result Name: {0}, alreadyOpenBehaviour: {1}
test.def.sf.conn.inProgress.overrideUsername=Overriding username: {0}
test.def.sf.conn.inProgress.alreadyOpenBehaviourReopen=A connection is already open and will be reopened.  Result Name: {0}, alreadyOpenBehaviour: {1}
test.def.sf.conn.inProgress.overridePassword=Overriding password: [supplied]
test.def.sf.conn.inProgress.clearingSecurityToken=Clearing security token due to override
test.def.sf.conn.inProgress.overridingSecurityToken=Overriding security token: [supplied]
test.def.sf.conn.inProgress.overridingEnvironment=Overriding environment : {0}
test.def.sf.conn.inProgress.overridingLightningMode=Overriding lightning mode to : {0}
test.def.sf.conn.inProgress.overridingWebBrowser=Overriding webBrowser: {0}
test.def.sf.conn.inProgress.closingUnusedResource=Closing {0} because it is no longer being used.  Name: {1}
test.def.sf.conn.inProgress.delegateCleanupConn=Delegating clean up to Cleanup Connection. Cleanup Connection Name: {0}, Log File Path: {1}
test.def.sf.conn.inProgress.deleteObject=Deleting object. Object: {0}, Id: {1}
test.def.sf.conn.inProgress.noObjectLogged=No Object Ids were logged. LogFile: {0}
test.def.sf.conn.inProgress.objectDeleted=Object deleted successfully.  Id: {0}
test.def.sf.conn.inProgress.objectDeletedByOther=Object deleted from some other process. Id: {0}
test.def.sf.conn.success.reuseExistingConn=Re-using existing connection. Connection: {0}, Result Name: {1}
test.def.sf.conn.success.managedResourceNotClosed=Not closing {0} because it is still being used.  Name: {1}
test.def.sf.conn.error.closeManagedResourceFailed=Failed to close managed resource.  Name: {0}
test.def.sf.conn.error.managedResourceNotAnchored=The value is not anchored.  Name: {0}, value class: {1}
test.def.sf.conn.error.managedResourceInterfaceNotImplemented=The value doesn't implement IManagedResource.  Name: {0}, value class: {1}
test.def.sf.conn.warning.autoCleanup=Auto cleanup requires that Object Id logging is enabled.
test.def.sf.conn.warning.cleanupConnNotFound=The cleanup connection was not found - it must be opened first.  cleanupConnectionName: {0}
test.def.sf.conn.warning.cleanupConnInvalid=The cleanup connection is invalid - it must be an Apex Connection.  cleanupConnectionName: {0}, type: {1}
test.def.sf.conn.warning.getRequestError=Error making GET request. 
test.def.sf.conn.warning.closeInputStream=Error closing input stream
test.def.sf.conn.warning.cleanupConnClosed=The Cleanup Connection is already closed - cleanup will be attempted on this connection. Cleanup Connection Name: {0}
test.def.sf.conn.warning.objLogFile=Object Insertion log file is empty or not found.  LogFilePath: {0}
test.def.sf.conn.warning.logFormat=Object Insertion log line is not in the expected format. LogFilePath: {0}, line Number: {1}, expected: {2}, actual: {3}
test.def.sf.conn.warning.errorDeleteObject=Error deleting objects.  Message: {0}
test.def.sf.conn.warning.valueAlreadyExists=Value already exists with different scope - using existing scope.  Expression: {0}, supplied scope: {1}, existing scope: {2}
test.def.sf.conn.warning.retryingRequestMessage={0} - retrying.  Method: {1}, retryCounter: {2}
test.def.sf.conn.warning.givingUpRetryingRequest={0} - giving up.  Method: {1}, retryCounter: {2}
test.def.sf.conn.error.alreadyOpenBehaviourFail=A connection is already open with this Result Name. You can change the 'If already open' setting to Reopen or Reuse the connection if necessary, but be aware that Reuse can be dangerous.  Result Name: {0}, alreadyOpenBehaviour: {1}
test.def.sf.conn.error.objectDeleteFailed=Object delete failed. Id: {0}, Message: {1}
test.def.sf.conn.error.alreadyOpenBehaviour=Unsupported AlreadyOpenBehaviour - defaulting to Fail.  AlreadyOpenBehaviour: {0}
test.def.sf.conn.error.alreadyOpenConn=A connection is already open with this Result Name.
test.def.sf.conn.error.partnerConnNotFound=The Partner Connection was not found.  Partner/Logon As Connection Name: {0}
test.def.sf.conn.error.metadataConnNotFound=The Metadata Connection was not found.  Metadata Connection Name: {0}
test.def.sf.conn.error.partnerConnException=Connection exception while opening Partner connection. Connection name: {0}, environment: {1}, authEndpoint: {2}, userName: {3}, password: {4}, securityToken: {5}
test.def.sf.conn.error.metadataConnExpected=A delegated Metadata connection is expected for Communities and Portal connections.
test.def.sf.conn.error.connOpenFail=Failed to open Communities or Portal connection.  Cause: {0}
test.def.sf.conn.error.userInfoFail=Failed to get User Info for connection.  Connection Name: {0}, cause: {1}
test.def.sf.conn.error.metadataSoapConnException=Connection exception while opening Metadata Soap connection. Connection name: {0}, environment: {1}, authEndpoint: {2}, userName: {3}, password: {4}, securityToken: {5}, messages: {6}
test.def.sf.conn.error.apexConnCloseFailed=Failed to close Apex Connection because insertion log does not begin with the expected header. LogFilePath: {0}, expected: {1}, firstLine: {2}
test.def.sf.conn.error.errorStoreValue=Cannot store value under an empty name.  Name: {0}, value: {1}
test.def.sf.conn.error.parsingExpression=Error parsing expression.  Expression: {0}
test.def.sf.conn.error.unsupportedExpression=Unsupported expression type - only VariableValues are currently supported.  Expression: {0}, type: {1}
test.def.sf.conn.error.resolveValueExpression=Error resolving value expression.  Expression: {0}
test.def.sf.conn.error.resolveValueFilterExpression=Error resolving value expression filter.  Expression: {0}
test.def.sf.conn.error.resolveValueExpressionFilter=Error resolving value expression filter - the last element cannot be a where filter.  Expression: {0}
test.def.sf.conn.error.resolveValueExpressionType= Error resolving value expression - invalid parent type for child.  Expression: {0}, element: : {1}

# Logging Support Messages for SSO login
test.def.sf.conn.inProgress.reconnectingSSO=Cached SSO session is no longer valid - reconnecting. Connection Name: {0}
test.def.sf.conn.inProgress.singleSignOnDetails=Using cached SSO sign-on details. Connection Name: {0}
test.def.sf.conn.inProgress.startOfSSOLogin=Start of Single Sign-On (SSO) login.  SSO Connection Name: {0}
test.def.sf.conn.inProgress.singleSignOnToSelenium=Sending doSsoLogin to Selenium handler
test.def.sf.conn.inProgress.shuttingSoapConn=Shutting down Soap Connections.  logFilePath: {0}
test.def.sf.conn.success.ssoLoginSuccess=Got doSsoLogin response.  Successful: {0}, feedback: {1}
test.def.sf.conn.success.identitySuccessfull=Identity Service successful. soapEndpoint: {0}, partnerEndpoint: {1}, metadataEndpoint: {2}
test.def.sf.conn.success.closingWebConn=Closing web connection.
test.def.sf.conn.success.stopPOWatcher=Stopping Page Object change watcher.
test.def.sf.conn.warning.ssoLoginTimeout=Timeout waiting for SSO login.  timeout(seconds): {0}
test.def.sf.conn.warning.identityServiceError=Error acquiring Identity Service access token.
test.def.sf.conn.warning.unexpectedContentType=Unexpected content-type in Identity Service response.  Expected application/json, actual: {0}
test.def.sf.conn.warning.unexpectedIdentityServiceFormat=Unexpected Identity Service response format.  Expected JSON object, actual: {0}
test.def.sf.conn.warning.urlNotPresent=Urls not present in Identity Service reponse.  Actual: {0}
test.def.sf.conn.warning.errorClosingOAuth=Error closing OAuth2 response stream.
test.def.sf.conn.warning.unsupportedContentEncoding=Unsupported content encoding returned - the result will contain the raw data as text., Encoding: {0}
test.def.sf.conn.error.oAuthLoginFail=OAuth login failed. Connection Name: {0}, URL string: {1}, messages: 
test.def.sf.conn.error.ssoLoginFail=SSO Login failed. Connection name: {0}, SSO Connection name: {1}, messages: 
test.def.sf.conn.error.ssoConnNotFound=The SSO Connection was not found.  Connection Name: {0}
test.def.sf.conn.error.unsupportedSSOConn=Unsupported SSO Connection type.  Connection Name: {0}, url: {1}

# Logging Support Messages for SfOauth login
test.def.sf.conn.inProgress.sfOAuthConnDetails=Connection details. Connection name: {0}, result name: {1}, result scope: {2}, urlString: {3}, environment: {4}, clientId: {5}, clientSecret: {6}, callBackUrl: {7}, accessToken: {8}, refreshToken: {9}
test.def.sf.conn.inProgress.sfOAuthIdentityServiceSuccess=Identity Service successful. ToolingEndpoint: {0}, ToolingRestEndpoint: {1}, PartnerEndpoint: {2}, MetadataEndpoint: {3}, EnterpriseEndpoint: {4}
test.def.sf.conn.inProgress.sfOAuthLogoutSuccess = Access Token Revoked successfully. Logout complete.
test.def.sf.conn.inProgress.sfOAuthAccessTokenRefreshSuccess = Access Token refreshed successfully.
test.def.sf.conn.warning.sfOAuthUnexpectedContentType=Unexpected content-type in Identity Service response.Expected application/json, actual: {0}
test.def.sf.conn.error.sfOAuthLogoutRevokeAccessTokenError=Error revoking OAuth2 access token. Cause: {0} 

# Logging Support Messages for browser: Chrome
test.def.sf.conn.inProgress.addCommandLineSwitch=Added Chrome command line switch for PAC proxy: {0}
test.def.sf.conn.inProgress.addChromeDesiredCapability=Added desired capability for Chrome browser proxy {0}
test.def.sf.conn.inProgress.switchToBypassProxy=Added Chrome command line switch to bypass proxy for local addresses: {0}
test.def.sf.conn.inProgress.bypassProxyTypeAndLocalAdd=Bypassing {0} proxy for local addresses: {1}
test.def.sf.conn.inProgress.usingChromeProfile=Using Chrome profile: {0}
test.def.sf.conn.inProgress.usingChromeProfileLocking=Using Chrome profile locking
test.def.sf.conn.inProgress.overridingChromeExePath=Overriding Chrome executable path: {0}
test.def.sf.conn.inProgress.autodetectProxy=Auto-detect proxy is set to true for Chrome.
test.def.sf.conn.inProgress.chromeExtensionsDisabled=Chrome extensions will be disabled due to --disable-extensions flag
test.def.sf.conn.inProgress.downloadCompatibleChromeDriver=Trying to download compatible Chrome driver...
test.def.sf.conn.inProgress.checkingCompatiblityOfChromeDriver=Checking if Chrome driver version {0} present at location: {1} is compatible with Chrome browser version {2} so trying to download compatible driver as per versioning guidelines using link http://chromedriver.chromium.org/downloads/version-selection
test.def.sf.conn.inProgress.chromeDevModeSuccessful=Chrome Developer Mode Workaround successful.  Attempts: {0}
test.def.sf.conn.inProgress.driverException=Got Web Driver Exception: {0}, Will Try to download compatible chrome driver if it is the cause of exception.
test.def.sf.conn.inProgress.chromeProcessNotKill=Could not kill chrome driver process with {0}, cause: {1}
test.def.sf.conn.inProgress.killChromeDriverProcess=Trying to kill other chrome driver processes which are using same executable path: {0}
test.def.sf.conn.inProgress.chromeProfileCheck=Checking Chrome Profile: {0}
test.def.sf.conn.inProgress.chromeProfileInUse=Chrome Profile in use by this VM: {0}
test.def.sf.conn.inProgress.profileDebugFileInUse=Chrome Profile debug file in use: {0}
test.def.sf.conn.inProgress.profileLockFileInUse=Chrome Profile lock file in use: {0}
test.def.sf.conn.inProgress.profileLockFileNotInUse=Chrome Profile lock file not in use: {0}
test.def.sf.conn.inProgress.lockingChromeProfile=Locking Chrome Profile (intra-process): {0}
test.def.sf.conn.inProgress.releaseChromeProfileLock=Releasing Chrome Profile chromeProfileFileLock: {0}
test.def.sf.conn.inProgress.closeChromeProfile=Closing Chrome Profile chromeProfileLockRaf: {0}
test.def.sf.conn.inProgress.releaseInterProcessProfileLock=Releasing Chrome Profile inter-process lock: {0}
test.def.sf.conn.warning.experimentalOptions=Add Chrome browser experimental options: {0}
test.def.sf.conn.warning.pathNotResolve=Could not resolve the chromedriver location.  Path: {0}
test.def.sf.conn.warning.locateProfileFolder=Error locating free Chrome Profile.  Folder: {0}
test.def.sf.conn.warning.driverVersionNotFound=Unable to find the chrome driver version
test.def.sf.conn.warning.windowsVerNotFound=Error getting chrome browser version for Windows
test.def.sf.conn.warning.linuxVerNotFound=Error getting chrome browser version for linux
test.def.sf.conn.warning.macVerNotFound=Error getting chrome browser version for Mac
test.def.sf.conn.warning.unknownDriverVersion=Chrome Driver Download will not be performed as chrome driver version can not be fetched for driver: {0}
test.def.sf.conn.warning.unknownBrowserVersion=Chrome Driver Download will not be performed as chrome browser version can not be fetched from Browser Install Location
test.def.sf.conn.warning.recreatingDriverAfterSleeping=UnsupportedCommandException while recreating ChromeDriver - sleeping before retry.  Attempt: {0}, duration (ms): {1}
test.def.sf.conn.warning.recreatingDriverAfterRetrying=UnsupportedCommandException while recreating ChromeDriver - retrying.  Attempt: {0}
test.def.sf.conn.warning.createDefaultChomrDriver=Unable to create chrome driver with downloadBehavior command in headless mode. Now creating default ChromeDriver with capabilities. File download with click is not available in this mode
test.def.sf.conn.warning.chromeDevModeFailed=Chrome Developer Mode Workaround failed.  Attempts: {0}
test.def.sf.conn.warning.releaseChromeProfileLock=Error releasing Chrome Profile file lock.  File: {0}
test.def.sf.conn.warning.closeChromeProfile=Error closing Chrome Profile lock file.  File: {0}
test.def.sf.conn.warning.exceptionWhileFetchingVersion=Got IO Exception while fetching chrome driver Version.
test.def.sf.conn.warning.notKilledDriverProcess=Could not kill chrome driver processes.
test.def.sf.conn.warning.runningChromeProcessNotFound= Could not get Details of Running Chrome Id Processes.
test.def.sf.conn.error.driverCreationFailFromLib=Failed to create ChromeDriver from the Test Project lib folder. Please follow versioning guidelines using this link http://chromedriver.chromium.org/downloads/version-selection
test.def.sf.conn.error.chromeDriverCreationFail=Failed to create ChromeDriver. Please follow versioning guidelines using this link for compatibility http://chromedriver.chromium.org/downloads/version-selection
test.def.sf.conn.error.compatibleBrowserNotFound=Failed to find the chrome browser version while downloading compatible driver, Exiting
test.def.sf.conn.error.chromeLaunchFail=Failed to launch chrome as could not download compatible driver
test.def.sf.conn.error.failToLaunchChrome=Failed to launch Chrome.
test.def.sf.conn.error.failToLaunchChromeByTimeout=Failed to launch chrome as could not download compatible driver, cause: Timeout while copying the files for driver with in 180 seconds
test.def.sf.conn.error.failToCreateFile=Failed to create Chrome launch file.  Path: {0}.
test.def.sf.conn.error.failToCloseFile=Failed to close Chrome launch file.  Path: {0}.
test.def.sf.conn.error.chromeLaunchFailByDriverVersion=Chrome Launch Failed, could not download compatible driver as chrome driver version can not be found.
test.def.sf.conn.error.exceptionWhileAuthentication=Unexpected exception doing Basic Authentication.

# Logging Support Messages for browser: Firefox
test.def.sf.conn.inProgress.addFirefoxCapabilityPacProxy=Added Firefox capability for PAC proxy: {0}
test.def.sf.conn.inProgress.addFirefoxCapabilityBrowserProxy=Added Firefox capability for browser proxy: {0} : {1}
test.def.sf.conn.inProgress.resolveFirefoxDriverPath=Successfully resolved geckodriver location: {0}
test.def.sf.conn.inProgress.attachedLogPath=Allocated log file: {0}

# Logging Support Messages for browser: Internet Explorer
test.def.sf.conn.inProgress.addIECapabilityFixedProxy=Added IE capability for fixed proxy: {0}
test.def.sf.conn.inProgress.addIEDesiredCapability=Added IE desired capability
test.def.sf.conn.inProgress.ensureCleanSession=Setting IE_ENSURE_CLEAN_SESSION/ie.ensureCleanSession capability for Internet Explorer
test.def.sf.conn.inProgress.ignoreProtectedModeSettings=Setting INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS/ignoreProtectedModeSettings capability for Internet Explorer
test.def.sf.conn.inProgress.enableElementCacheCleanup=Setting ENABLE_ELEMENT_CACHE_CLEANUP/enableElementCacheCleanup capability for Internet Explorer
test.def.sf.conn.inProgress.nativeEvents=Setting NATIVE_EVENTS/nativeEvents capability for Internet Explorer.
test.def.sf.conn.inProgress.ieForceCreateProcessApi=Setting FORCE_CREATE_PROCESS/ie.forceCreateProcessApi capability for Internet Explorer
test.def.sf.conn.inProgress.ieUsePerProcessProxy=Setting IE_USE_PRE_PROCESS_PROXY/ie.usePerProcessProxy capability for Internet Explorer
test.def.sf.conn.inProgress.ignoreZoomSetting=Setting IGNORE_ZOOM_SETTING/ignoreZoomSetting capability for Internet Explorer
test.def.sf.conn.inProgress.browserCommandLineSwitches=Setting IE_SWITCHES/ie.browserCommandLineSwitches capability for Internet Explorer.  value: {0}
test.def.sf.conn.inProgress.settingIEDriverProperty=Setting webdriver.ie.driver.logfile property for Internet Explorer with loglevel TRACE: {0}
test.def.sf.conn.warning.ieDriverNotResolved=Could not resolve the IEDriverServer.exe location.  Path: {0}
test.def.sf.conn.warning.msDriverNotResolved=Could not resolve the MicrosoftWebDriver.exe location.  Path: {0}
test.def.sf.conn.error.ieMachineMustBeWindows=Internet Explorer tests must be run on a Windows machine.

# Logging Support Messages for browser: Safari
test.def.sf.conn.inProgress.safariWebDriverLogFileProp=Setting webdriver.safari.driver.logfile property for Safari with TRACE loglevel to {0}
test.def.sf.conn.inProgress.safariDriverNotFoundUpdateSafari=Safari web driver could not be found. Please update to Safari 10 or above.
test.def.sf.conn.inProgress.safariDriverNotFoundWrongPath=Safari Driver could not be found. Please enter the correct path.
test.def.sf.conn.fail.safariMacRequirement=Safari tests must be run on a MacOS machine.

# Logging Support Messages for browser: Edge
test.def.sf.conn.inProgress.settingEdgeDriverProperty=Setting webdriver.edge.driver.logfile property for Microsoft Edge with loglevel TRACE: {0} 

# Logging Support Messages for serviceMax
test.def.sf.conn.inProgress.smaxFsaDesktopAssertCred=Assert user name and domain
test.def.sf.conn.inProgress.smaxFsaDesktopAddDomain=Requested custom host URL does not exist in saved list. Adding new domain server...
test.def.sf.conn.inProgress.smaxFsaDesktopCustomUrl=Using custom domain server. Custom URL: {0}
test.def.sf.conn.inProgress.smaxFsaDesktopSaveCustomUrl=Successfully saved requested custom host URL
test.def.sf.conn.inProgress.smaxFsaDesktopUpdateCustomUrl=Saved custom host URL is different from requested URL. Updating...
test.def.sf.conn.inProgress.smaxFsaDesktopDomainAssertSuccessful=Successfully asserted domain server
test.def.sf.conn.inProgress.smaxFsaDesktopCurrentUser=Logged in with username: {0}
test.def.sf.conn.inProgress.smaxFsaDesktopLoginClick=Successfully clicked on Smax login button.
test.def.sf.conn.inProgress.smaxFsaDesktopAppWait=Waiting for ServiceMax app to appear. Attempt: {0}
test.def.sf.conn.success.smaxFsaDesktopAssertCred=Successfully performed User and Domain check on Smax login screen
test.def.sf.conn.warning.smaxFsaDesktopAppWaitFail=Failed to find ServiceMax app after {0} successful attempt

# Logging Support Messages for Mobile webDriver
test.def.sf.conn.inProgress.mobileAppSwitchContext=Switching mobile application context
test.def.sf.conn.error.mobileSessionFail=Failed to create {0} session. DesiredCapabilities:  {1}
test.def.sf.conn.inProgress.mobileAppSwitchContextAttempt=Waiting for WEBVIEW context - attempt {0}
test.def.sf.conn.warning.webviewContextNotFound=Failed to find WEBVIEW context after {0} attempts - using NATIVE_APP context
test.def.sf.conn.inProgress.mobileAppNativeContext=using NATIVE_APP context.
test.def.sf.conn.error.contextSwitchFailed=Failed to switch context to {0}

# Logging Support Messages for browser: SauceLabs Desktop
test.def.sf.conn.inProgress.saucelabsDesktopConfiguration=Executing Test using Sauce Labs Desktop via user {0}, Platform: {1}, BrowserName: {2}, Version: {3}

# Logging Support Messages for browser: SauceLabs Mobile
test.def.sf.conn.inProgress.saucelabsMobileDeviceSupport=SauceLabs Mobile is only supported for IOS and ANDROID and not for any other platform

# Logging Support Messages for browser: Perfecto Mobile
test.def.sf.conn.inProgress.perfectoBrowserSupportNotImplemented=Browsers support not yet implemented for Perfecto

# Logging Support Messages for webDriver
test.def.sf.conn.inProgress.windowHandleAlert=Not updating window handles because Firefox/IE/Safari/Edge/EdgeChromium alert is present
test.def.sf.conn.inProgress.addBrowserCapability=Add {0} browser specific capabilities
test.def.sf.conn.inProgress.dataCenter.connection=Connection to {0} using username: {1}
test.def.sf.conn.inProgress.deviceConfiguration=Device configuration:
test.def.sf.conn.inProgress.platformName=Platform Name: {0}
test.def.sf.conn.inProgress.platformVersion=Platform Version: {0}
test.def.sf.conn.inProgress.deviceName=Device Name: {0}
test.def.sf.conn.inProgress.device.desiredcapabilities=Desired Capabilities:
test.def.sf.conn.inProgress.show.capabilities={0} = {1}
test.def.sf.conn.inProgress.libFolderExe=Using executable from Test Project lib folder. executable: {0} 
test.def.sf.conn.inProgress.homeFolderExe=Using executable from UserHome Provar.  executable: {0}
test.def.sf.conn.inProgress.waitingToGetWindowHandle=Waiting for webdriver to get window handles..
test.def.sf.conn.inProgress.closeBrowserWindow=Browser window has been closed.  Window: {0}
test.def.sf.conn.inProgress.lockToDownloadDriver=Acquired lock to download compatible driver
test.def.sf.conn.inProgress.failToParseURL=Failed to parse current URL for HTTP Authentication.  currentUrl: {0}
test.def.sf.conn.inProgress.webDriverBeforeScript=WebDriver beforeScript.  kickPending: {0}, Script: {1}
test.def.sf.conn.inProgress.webDriverAfterScript=WebDriver afterScript.  kickPending: {0}, arg0: {1}
test.def.sf.conn.inProgress.webDriverBeforeNavigateTo=WebDriver beforeNavigateTo.  arg0: {0}
test.def.sf.conn.inProgress.webDriverAfterNavigateTo=WebDriver afterNavigateTo.  arg0: {0}
test.def.sf.conn.inProgress.webDriverBeforeNavigateForward=WebDriver beforeNavigateForward.
test.def.sf.conn.inProgress.webDriverAfterNavigateForward=WebDriver afterNavigateForward.
test.def.sf.conn.inProgress.webDriverBeforeNavigateBack=WebDriver beforeNavigateBack.
test.def.sf.conn.inProgress.webDriverAfterNavigateBack=WebDriver afterNavigateBack.
test.def.sf.conn.inProgress.webDriverBeforeFindBy=WebDriver beforeFindBy.  arg0: {0}, arg1: {1}
test.def.sf.conn.inProgress.webDriverAfterFindBy=WebDriver afterFindBy.  arg0: {0}, arg1: {1}
test.def.sf.conn.inProgress.webDriverBeforeClickOn=WebDriver beforeClickOn.  arg0: {0}
test.def.sf.conn.inProgress.webDriverAfterClickOn=WebDriver afterClickOn.  arg0: {0}
test.def.sf.conn.inProgress.webDriverAfterNavigateRefresh=WebDriver afterNavigateRefresh.
test.def.sf.conn.inProgress.beforeNavigateAfterClickOn=beforeNavigateRefresh afterClickOn.
test.def.sf.conn.inProgress.winAppDriverPort=Launching WinAppDriver.exe at port: {0}
test.def.sf.conn.inProgress.winAppDriverForceKill=Failed to close Windows driver, retrying forcibly kill
test.def.sf.conn.inProgress.winAppDriverCloseSafely=Closing WinAppDriver.exe process safely
test.def.sf.conn.inProgress.webDriverIsNull=Webdriver is null.
test.def.sf.conn.inProgress.webDriverClosed=Closing Selenium driver
test.def.sf.conn.inProgress.reuseExistingDriver=Reusing existing Selenium driver.  Location: {0}
test.def.sf.conn.warning.webDriverException=WebDriver exception.
test.def.sf.conn.warning.unableToFetchCurrentUrl=Unable to fetch the current url.
test.def.sf.conn.warning.compatibleDriverNotFound=Failed to find the compatible driver version while downloading compatible driver, Exiting
test.def.sf.conn.warning.driverNameNotResolved=Could not resolve the {0}.exe location.  Path: {1}
test.def.sf.conn.warning.winAppDriverFail=Not able to create Windows driver
test.def.sf.conn.error.driverCreationFail=Failed to create WebDriver.
test.def.sf.conn.error.unableToLoadDriver=Unable to load the EventFiring Web Driver. Please ensure the latest Selenium jar is in your project lib directory. Required class: {0}
test.def.sf.conn.error.unableToCreateDriver=Unable to create the EventFiring WebDriver. Please ensure the latest Selenium jar is in your project lib directory. Driver class: {0}  
test.def.sf.conn.error.compatibleDriverNotFound=Failed to find the compatible driver version while downloading compatible driver, Exiting
test.def.sf.conn.error.failedByDriverException=Driver versions are compatible. Failing due to web driver exception.
test.def.sf.conn.error.failToConnect=Failed to get connection to url : {0}.
test.def.sf.conn.error.failToCopy=Failed to copy files.
test.def.sf.conn.error.failToCloseStream=Failed to close the stream: 
test.def.sf.conn.error.failToUnzip=Failed to unzip files.
test.def.sf.conn.error.sfConnRequired=A Salesforce connection is required.  Actual: {0}
test.def.sf.conn.error.machineMustBeWindows={0} tests must be run on a Windows machine.
test.def.sf.conn.error.pageObjectCreationFailed=Failed to create Page Object class loader.  Project Bin: {0}
test.def.sf.conn.error.proxyFactoryClassCreationFailed=Failed to locate/create the Proxy Factory class/object to create Remote Web Driver, Factory Class: {0}

test.def.sf.conn.inProgress.navigateToHomePage=Navigate to home page
test.def.sf.conn.inProgress.performPageLoadWait=Perform page load wait
test.def.sf.conn.inProgress.openingPageURL=Opening page.  URL: {0}
test.def.sf.conn.inProgress.requestedPageURL=Opening page.  Requested URL: {0}, Absolute URL: {1}
test.def.sf.conn.inProgress.waitforPageLoad=Re-attempting of waitForPageToLoad.  Timeout(ms): {0}
test.def.sf.conn.inProgress.endWaitforPageLoad=End of waitForPageToLoad.  Duration(ms): {0}
test.def.sf.conn.inProgress.qualifiedRelativeURL=Qualified relative URL.  URL: {0}
test.def.sf.conn.inProgress.maintenanceNotificationPage=Continuing with the Scheduled Maintenance Notification page
test.def.sf.conn.inProgress.loginInterstitialPage=Continuing with the login interstitial page
test.def.sf.conn.inProgress.mobilePhoneRegistration=Continuing with the Mobile phone registration
test.def.sf.conn.inProgress.loginFlowOnlyPage=Continuing with the login flow only page
test.def.sf.conn.inProgress.loginFlowPage=Continuing with the login flow page
test.def.sf.conn.inProgress.loginInterstitialPage=Continuing with the login interstitial page
test.def.sf.conn.inProgress.buildWaitMobileCaddy=Waiting for MobileCaddy application to build ...
test.def.sf.conn.inProgress.waitTillBuild=Waiting for application to build - still building.
test.def.sf.conn.inProgress.buildHandlingAlert=Waiting for application to build - handling alert: {0}
test.def.sf.conn.inProgress.findSFContext=Finding context for Salesforce1 app...
test.def.sf.conn.inProgress.findWebviewContext=Waiting for WEBVIEW context - attempt {0}
test.def.sf.conn.inProgress.browserWindowClosed=Browser window closed
test.def.sf.conn.inProgress.alertDisplayed=Alert is showing
test.def.sf.conn.inProgress.basicHTTPAuthLogin=Attempting to log on with Basic HTTP Authentication for host
test.def.sf.conn.inProgress.pageWaitTimeout=Page wait timed out.  Attempting readyState workaround.
test.def.sf.conn.inProgress.loginToSF=Logging in to Salesforce as {0}...
test.def.sf.conn.inProgress.loginSuccess=Log in successful.
test.def.sf.conn.inProgress.launcherPopupInListView=App launcher popup is in list view.
test.def.sf.conn.inProgress.appLauncherTriggered=Successfully triggered full app launcher popup.
test.def.sf.conn.inProgress.closeTabsByXpath=Using xpaths to close {0} tabs
test.def.sf.conn.inProgress.closingTabsByXpath=xpaths to close tabs
test.def.sf.conn.inProgress.closeTabsByScript=Injecting script to close tabs in lightning
test.def.sf.conn.inProgress.startingFieldWait=Field wait is starting.
test.def.sf.conn.inProgress.polingForField=Polling for field.  attempt: {0}, by: {1}
test.def.sf.conn.inProgress.waitForLightlingPageToload=Waited for lightning page to load.  Attempts: {0}, duration: {1}
test.def.sf.conn.inProgress.poFolderPath=Not watching Page Object folder because it does not yet exits. Page Object bin folder: {0}
test.def.sf.conn.inProgress.poChangeWatcher=Starting Page Object change watcher.  Page Object bin folder: {0}
test.def.sf.conn.inProgress.noOpenTabs=No open tabs found.
test.def.sf.conn.inProgress.tabContentNotLoaded=Tab content not loaded.
test.def.sf.conn.success.waitForPageToLoad=Start of waitForPageToLoad. Timeout(ms): {0}
test.def.sf.conn.warning.enableLightningOverride=User default preference is Lightning and the selected application : {0} can not be accessed. Please enable lightning override or choose the required application.
test.def.sf.conn.warning.findWebviewContextFail=Failed to find WEBVIEW context after 3 attempts - using NATIVE_APP context.
test.def.sf.conn.warning.fieldPollingException=Unexpected exception polling for field.
test.def.sf.conn.warning.buttonNotFound=button not found in 30secs
test.def.sf.conn.warning.unableToLoadLightningContents=Unable to load the lightning contents
test.def.sf.conn.warning.splitSpinnerNotInvisble=Split view spinner container still not invisble
test.def.sf.conn.warning.tabSpinnerNotInvisble=Tab content loading spinners still not invisible
test.def.sf.conn.warning.recordTemplateNotInvisble=Record home template still not invisible
test.def.sf.conn.warning.doAuraBusyWait=Waited for 60 seconds for the aura indicator to disappear. But did not happen, this may lead to incorrect results.
test.def.sf.conn.warning.unableToTriggerAppLauncher=Unable to trigger app launcher
test.def.sf.conn.warning.sfSessionLost=Salesforce session has been lost - logging in again.  Attempt: {0}
test.def.sf.conn.error.failedToGetHomePage=Failed to get home page for Salesforce application. {0}, Application Name: {1}
test.def.sf.conn.error.failedToEncodeUserName=Failed to encode username: {0}
test.def.sf.conn.error.retrieveUserLightningPreference=Failed to retrieve user lightning preference. Cause: {0}
test.def.sf.conn.error.getConnectionDetailsFail=Failed to get connection details for Logon As connection.  Logon As Connection: {0}
test.def.sf.conn.error.ssoLoginFailed=Single Sign-On (SSO) Log-in failed. SSO Connection Name: {0}, feedback: {1}
test.def.sf.conn.error.orgIdError=Error getting Org Id during Login As processing.  Cause: {0}
test.def.sf.conn.error.getUILoginUrlFail=Failed to get UI login URL.  Cause: {0}
test.def.sf.conn.error.getMobilecaddyUserIdFail=Failed to retrieve User ID for MobileCaddy app.  Connection: {0}, cause: {1}
test.def.sf.conn.error.failDecodeUserName=Failed to decode username : {0}
test.def.sf.conn.error.failDecodeStartUrl=Failed to decode start Url : {0}
test.def.sf.conn.error.basicAuthException=Unexpected exception doing Basic Authentication.
test.def.sf.conn.error.loginFailed=Login failed.  Reason: {0}
test.def.sf.conn.error.setCookiesFailed=Failed to set cookies for current session: {0}
test.def.sf.conn.error.openingAppHomePageTimeout=Timeout exception while opening app home page:
test.def.sf.conn.error.failToFindElement=Failed to find element:
test.def.sf.conn.error.navigationError=Error doing app navigation in lightning.
test.def.sf.conn.error.seleniumScriptNotFound=The selenium script was not found on the class path. Expected path: {0}
test.def.sf.conn.error.seleniumScriptReadError=Failed to read selenium script from the class path. Expected path: {0}
test.def.sf.conn.error.sfSessionNotRecover=Could not recover Salesforce Session after {0} attempts - giving up.

# Logging Support Set Values
test.def.control.set.inProgress.setValue=Setting value {0} to {1}
test.def.control.set.success.setValue=Successfully set {0} to {1}
test.def.control.set.warning.setValue=Warning - setting value {0} to {1}
test.def.control.set.error.setValue=Error when attempting to set value {0} to {1}

test.def.control.set.warning.noValueName=No value name is specified for value number {0}
test.def.control.set.warning.noValue=There are no values.
test.def.control.set.inProgress.valueConfig=Configuration: ValueScope:{0}
